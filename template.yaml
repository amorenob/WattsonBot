AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Serverless S3 Uploader and Getter - upload files to S3 buckets and generate signed URLs for retrieval.

Globals:
  Api:
    EndpointConfiguration: EDGE      
    Cors:
      AllowMethods: "'OPTIONS,GET,POST'"
      AllowHeaders: "'Content-Type'"
      AllowOrigin: "'*'" 
  Function:
    Timeout: 5

Resources:
  S3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: 'wattson-images-prod'
      CorsConfiguration:
        CorsRules:
        - AllowedHeaders:
            - "*"
          AllowedMethods:
            - GET
            - PUT
            - POST
            - DELETE
            - HEAD
          AllowedOrigins:
            - "*"

  # Lambda function to generate a production report
  GetProdReportFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: getProdReport/
      Handler: getProdReport.lambda_handler
      Runtime: python3.12
      Timeout: 30
      Environment: 
        Variables:
          NREL_API_KEY: ''
          GOOGLE_API_KEY: ''
          API2PDF_API_KEY: ''
          UploadBucket: !Ref S3Bucket
      #Layers:  
      #  - 'arn:aws:lambda:us-east-1:401938477043:layer:weasyprintLayer312:1'
      Policies:
        - Statement:
          - Effect: Allow
            Action:
              - s3:GetObject
              - s3:PutObject
            Resource: !Sub "arn:aws:s3:::${S3Bucket}/*"
      Events:
        HttpGet:
          Type: Api
          Properties:
            Path: '/prod-report'
            Method: GET
  
Outputs:
  S3BucketName:
    Description: S3 bucket
    Value: !Ref S3Bucket

  GetProdReportAPIEndpoint:
    Description: "API Gateway endpoint URL for GetProdReport function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/prod-report"